// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// evaluate_lambda_c
NumericVector evaluate_lambda_c(List snfield, NumericMatrix x);
RcppExport SEXP _rcox_evaluate_lambda_c(SEXP snfieldSEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type snfield(snfieldSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(evaluate_lambda_c(snfield, x));
    return rcpp_result_gen;
END_RCPP
}
// rcox_MH
List rcox_MH(int n, NumericVector win, List snfield, int iter, int dbg);
RcppExport SEXP _rcox_rcox_MH(SEXP nSEXP, SEXP winSEXP, SEXP snfieldSEXP, SEXP iterSEXP, SEXP dbgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type win(winSEXP);
    Rcpp::traits::input_parameter< List >::type snfield(snfieldSEXP);
    Rcpp::traits::input_parameter< int >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< int >::type dbg(dbgSEXP);
    rcpp_result_gen = Rcpp::wrap(rcox_MH(n, win, snfield, iter, dbg));
    return rcpp_result_gen;
END_RCPP
}
// rcox_thin
List rcox_thin(NumericVector win, List snfield, int dbg);
RcppExport SEXP _rcox_rcox_thin(SEXP winSEXP, SEXP snfieldSEXP, SEXP dbgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type win(winSEXP);
    Rcpp::traits::input_parameter< List >::type snfield(snfieldSEXP);
    Rcpp::traits::input_parameter< int >::type dbg(dbgSEXP);
    rcpp_result_gen = Rcpp::wrap(rcox_thin(win, snfield, dbg));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rcox_evaluate_lambda_c", (DL_FUNC) &_rcox_evaluate_lambda_c, 2},
    {"_rcox_rcox_MH", (DL_FUNC) &_rcox_rcox_MH, 5},
    {"_rcox_rcox_thin", (DL_FUNC) &_rcox_rcox_thin, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_rcox(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
